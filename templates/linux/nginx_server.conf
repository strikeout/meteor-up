server {
    server_name localhost;
    root /opt/<%= appName %>/public/;

    passenger_enabled on;

    passenger_app_type node;
    passenger_startup_file app/main.js;



    passenger_sticky_sessions on;
    passenger_sticky_sessions_cookie_name stickysession;

    passenger_friendly_error_pages on;

    passenger_set_cgi_param ROOT_URL <%= ROOT_URL %>;
    <% if (DDP_DEFAULT_CONNECTION_URL) { %>
        passenger_set_cgi_param DDP_DEFAULT_CONNECTION_URL "<%= DDP_DEFAULT_CONNECTION_URL %>";
    <% } %>

    passenger_set_cgi_param MONGO_URL <%= MONGO_URL %>;
    <% if (MONGO_OPLOG_URL) { %>
        passenger_set_cgi_param MONGO_OPLOG_URL "<%= MONGO_OPLOG_URL %>";
    <% } %>

    # By setting the _PASSENGER_NODE_CONTROL_SERVER environment variable, whenever you issue a restart command, Phusion Passenger will force the app to exit. All connections, both short-running connections (e.g. normal HTTP requests) and long-running connections, will be terminated.
    passenger_set_cgi_param _PASSENGER_NODE_CONTROL_SERVER 1;
}


# first request does not have to be slower, pre-heat the servers
passenger_pre_start http://localhost/;

# passenger global config
passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
passenger_ruby /usr/bin/ruby;


# we want one process per core, the C0RES variable gets replaced in env.sh because its not easy to have
# env vars in nginx conf.
passenger_min_instances CORES;
passenger_max_pool_size CORES;