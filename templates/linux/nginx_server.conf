server {
    server_name localhost;
    root /opt/<%= appName %>/public/;

    passenger_enabled on;
    passenger_app_type node;
    passenger_startup_file app/main.js;
    passenger_min_instances 1;

    passenger_sticky_sessions on;
    passenger_sticky_sessions_cookie_name stickysession;

    passenger_friendly_error_pages on;

    # By setting the _PASSENGER_NODE_CONTROL_SERVER environment variable, whenever you issue a restart command, Phusion Passenger will force the app to exit. All connections, both short-running connections (e.g. normal HTTP requests) and long-running connections, will be terminated.
    passenger_set_cgi_param _PASSENGER_NODE_CONTROL_SERVER 1;

    passenger_set_cgi_param ROOT_URL <%= ROOT_URL %>;
    passenger_set_cgi_param MONGO_URL <%= MONGO_URL %>;

    <% if (DDP_DEFAULT_CONNECTION_URL) { %>
    passenger_set_cgi_param MONGO_OPLOG_URL <%= MONGO_OPLOG_URL %>;
    <% } %>

    <% if (DDP_DEFAULT_CONNECTION_URL) { %>
    passenger_set_cgi_param DDP_DEFAULT_CONNECTION_URL <%= DDP_DEFAULT_CONNECTION_URL %>;
    <% } %>

}


# first request doesnt have to be slower, pre-heat here
passenger_pre_start http://localhost/;


passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
passenger_ruby /usr/bin/ruby;

